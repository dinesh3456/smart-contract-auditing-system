version: "3.8"

services:
  # MongoDB database service
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-example}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - audit_network

  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    depends_on:
      - mongodb
    ports:
      - "5000:5000"
    environment:
      - PORT=5000
      - MONGODB_URI=mongodb://${MONGO_USERNAME:-root}:${MONGO_PASSWORD:-example}@mongodb:27017/smart-contract-audit?authSource=admin
      - JWT_SECRET=${JWT_SECRET:-your_default_jwt_secret}
      - NODE_ENV=production
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - audit_network

  # Frontend React application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: always
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - audit_network

  # Analysis engine service
  analysis-engine:
    build:
      context: ./analysis-engine
      dockerfile: Dockerfile
    container_name: analysis-engine
    restart: always
    volumes:
      - ./analysis-engine:/app
      - /app/node_modules
    networks:
      - audit_network

  # Compliance checker service
  compliance-checker:
    build:
      context: ./compliance-checker
      dockerfile: Dockerfile
    container_name: compliance-checker
    restart: always
    volumes:
      - ./compliance-checker:/app
      - /app/node_modules
    networks:
      - audit_network

  # Reports service
  reports-service:
    build:
      context: ./reports-service
      dockerfile: Dockerfile
    container_name: reports-service
    restart: always
    volumes:
      - ./reports-service:/app
      - /app/node_modules
      - report_data:/app/reports
    networks:
      - audit_network

  # AI detector service
  ai-detector:
    build:
      context: ./ai-detector
      dockerfile: Dockerfile
    container_name: ai-detector
    restart: always
    volumes:
      - ./ai-detector:/app
      - ai_models:/app/models
    networks:
      - audit_network

networks:
  audit_network:
    driver: bridge

volumes:
  mongodb_data:
  report_data:
  ai_models:
